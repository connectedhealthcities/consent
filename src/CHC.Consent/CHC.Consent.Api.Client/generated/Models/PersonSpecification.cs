// <auto-generated>
// (C) 2018 CHC  License: TBC
// </auto-generated>

namespace CHC.Consent.Api.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PersonSpecification
    {
        /// <summary>
        /// Initializes a new instance of the PersonSpecification class.
        /// </summary>
        public PersonSpecification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PersonSpecification class.
        /// </summary>
        /// <param name="updateMode">Possible values include: 'CreateOrUpdate',
        /// 'UpdateOnly', 'CreateOnly'</param>
        public PersonSpecification(IList<IIdentifierValueDto> identifiers = default(IList<IIdentifierValueDto>), UpdateMode? updateMode = default(UpdateMode?), string authority = default(string), IList<MatchSpecification> matchSpecifications = default(IList<MatchSpecification>))
        {
            Identifiers = identifiers;
            UpdateMode = updateMode;
            Authority = authority;
            MatchSpecifications = matchSpecifications;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "identifiers")]
        public IList<IIdentifierValueDto> Identifiers { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'CreateOrUpdate',
        /// 'UpdateOnly', 'CreateOnly'
        /// </summary>
        [JsonProperty(PropertyName = "updateMode")]
        public UpdateMode? UpdateMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "authority")]
        public string Authority { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "matchSpecifications")]
        public IList<MatchSpecification> MatchSpecifications { get; set; }

    }
}
