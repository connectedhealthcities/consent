@page "{id:long}"
@model StudiesModel



@section title {@Model.Study.Name}

<h1>@Model.Study.Name</h1>

<div class="bg-danger" asp-validation-summary="ModelOnly"></div>

<form method="post" >
    <div class="form-row">
    @for (var index = 0; index < Model.SearchFields.Count; index++)
    {
        <div class="form-group col-md-4">
            <input type="hidden" asp-for="SearchFields[index].FieldName"/>
            <input type="hidden" asp-for="SearchFields[index].Label"/>
            <label asp-for="SearchFields[index].Value">@Model.SearchFields[index].Label</label>
            <input class="form-control form-control-sm" type="text" asp-for="SearchFields[index].Value"/>
            <span asp-validation-for="SearchFields[index].Value"></span>
        </div>
    }
    </div>
    <button type="submit" class="btn btn-primary btn-sm">Search</button>
</form>

<table class="table" condition="Model.People.Any()">
    <thead>
    <th>Subject Identifier</th>
    @foreach (var identifierType in Model.IdentifierNames)
    {
    
        <th>@identifierType</th>

    }
    </thead>
    <tbody>
    @foreach (var (subject, identifiers) in Model.People)
    {
        <tr>
            <td><a asp-page="Subject"  asp-route-studyId="@subject.StudyId.Id" asp-route-subjectIdentifier="@subject.SubjectIdentifier">@subject.SubjectIdentifier</a> </td>
            @{
                foreach (var identifierType in Model.IdentifierNames)
                {
                    <td>
                        @{
                            foreach (var identifier in identifiers.Where(_ => _.Definition.SystemName == identifierType))
                            {
                                <span>@await Component.InvokeAsync("Identifier", new { identifier })</span>
                            }
                        } 
                    </td>
                }
            }
        </tr>

    }
    </tbody>
</table>

<p class="small">Found @Model.People.Count people</p>