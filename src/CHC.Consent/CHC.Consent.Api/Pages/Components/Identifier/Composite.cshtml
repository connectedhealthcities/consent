@model CompositeIdentifierValue<PersonIdentifier>
@using CHC.Consent.Common.Identity.Identifiers
@using CHC.Consent.Common.Infrastructure;
@using CHC.Consent.Common.Infrastructure.Definitions
@using Microsoft.AspNetCore.Html

@functions
{
    private Task<IHtmlContent> ShowIdentifier(PersonIdentifier value, DefinitionRegistry registry)
    {
        return Component.InvokeAsync("Identifier", new {identifier = value, registry = registry, raw = ViewBag.Raw});
    }
}
       
@if (ViewBag.Raw != true)
{
    <ul class="list-inline">
        @{
            var registry = new IdentifierDefinitionRegistry(Model.Identifiers.Select(_ => _.Definition));
        }
        @foreach (var id in Model.Identifiers)
        {
            <text><li class="list-inline-item">@await ShowIdentifier(id, registry)</li></text>
        }
    </ul>
}
else
{
            var registry = new IdentifierDefinitionRegistry(Model.Identifiers.Select(_ => _.Definition));
        @foreach (var id in Model.Identifiers)
        {
            @await ShowIdentifier(id, registry)<text> </text>
        }

}
